name: Check

on:
  push:
    branches: [master, ci]
  pull_request:
    branches: [master]

jobs:
  run-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt update && sudo apt install -y build-essential libfontconfig-dev libfreetype-dev libharfbuzz-dev
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: cargo nextest r --no-fail-fast

  nix-build:
    name: Build nix flake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix flake check
      - run: nix build --print-build-logs .

  check-linux:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt update && sudo apt install -y build-essential libfontconfig-dev libfreetype-dev libharfbuzz-dev

      - run: cargo fmt --all -- --check
      - run: cargo check -p subrandr --all-features
      - run: cargo xtask install --prefix prefix

  check-wasi:
    name: Check wasm32-wasip1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add wasm32-wasip1
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt update && sudo apt install -y build-essential

      - name: Cache wasi dependencies
        id: cache-wasi-deps
        uses: actions/cache@v4
        with:
            key: wasi-deps-${{ hashFiles('wasi32/Dependencies.Dockerfile') }}
            path: wasi32/deps

      - run: |
          cd wasi32
          ./build_dependencies.sh
        if: ${{ steps.cache-wasi-deps.outputs.cache-hit != 'true' }}

      - run: cargo build --target wasm32-wasip1 -p subrandr --all-features

  check-windows:
    name: Check Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-rust

      - uses: Swatinem/rust-cache@v2
      - shell: msys2 {0}
        run: cargo check -p subrandr --all-features
      - shell: msys2 {0}
        run: cargo xtask install --prefix prefix
