name: Check

on:
  push:
    branches: [master, ci]
  pull_request:
    branches: [master]

jobs:
  run-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt update && sudo apt install -y build-essential libfontconfig-dev libfreetype-dev libharfbuzz-dev
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: cargo nextest r --workspace --exclude sbr-overlay --no-fail-fast

  nix-build:
    name: Build nix flake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix flake check
      - run: nix build --print-build-logs .

  check-linux:
    name: Check ${{ matrix.name }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64 Linux
            image: ubuntu-latest
          # FIXME: Started to fail all of a sudden https://github.com/afishhh/subrandr/actions/runs/16400428460/job/46339036503?pr=35#step:5:74
          # - name: i686 Linux
          #   image: ubuntu-latest
          #   cross-arch: i686
          #   rustc-cross-target: i686-unknown-linux-gnu
          #   extra-cflags: -m32
          #   extra-packages: gcc-multilib
          - name: aarch64 Linux
            image: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy rustfmt
          targets: ${{ matrix.rustc-cross-target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.cross-arch }}
      - run: ./ci/ubuntu_install_packages.sh
        env:
          CROSS_ARCH: ${{ matrix.cross-arch }}
          EXTRA_PACKAGES: ${{ matrix.extra-packages }}
          LIBRARIES: libfontconfig-dev libfreetype-dev libharfbuzz-dev

      - run: cargo fmt --all -- --check
      - run: cargo clippy --workspace --exclude sbr-overlay --all-features -- -D warnings
      - run: ./ci/c_sanity_check.sh
        env:
          CROSS_TARGET: ${{ matrix.rustc-cross-target }}
          CFLAGS: ${{ matrix.extra-cflags }}

  check-wasi:
    name: Check wasm32-wasip1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt update && sudo apt install -y build-essential

      - name: Cache wasi dependencies
        id: cache-wasi-deps
        uses: actions/cache@v4
        with:
            key: wasi-deps-${{ hashFiles('wasi32/Dependencies.Dockerfile') }}
            path: wasi32/deps

      - run: |
          cd wasi32
          ./build_dependencies.sh
        if: ${{ steps.cache-wasi-deps.outputs.cache-hit != 'true' }}

      - run: cargo build --target wasm32-wasip1 -p subrandr --all-features

  check-windows:
    name: Check ${{ matrix.name }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64 Windows
            image: windows-latest
            msystem: MINGW64
          # FIXME: aarch64 is broken because implib produces garbage implibs for it
          # - name: aarch64 Windows
          #   image: windows-11-arm
          #   msystem: CLANGARM64
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: git
          pacboy: >-
            gcc:p
            freetype:p
            harfbuzz:p
            rust:p

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.msystem }}
      - shell: msys2 {0}
        run: cargo clippy --workspace --exclude sbr-overlay --all-features -- -D warnings
      - shell: msys2 {0}
        run: ./ci/c_sanity_check.sh
