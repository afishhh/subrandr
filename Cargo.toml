[package]
name = "subrandr"
version.workspace = true
edition.workspace = true

[workspace.package]
version = "0.2.0"
edition = "2021"

[package.metadata.capi]
# This is very crudely parsed by the build script, don't touch.
abiver = "0"

[lib]
crate-type = ["rlib", "cdylib", "staticlib"]

[features]
default = ["platform-defaults"]
wgpu = ["rasterize/wgpu"]

font-provider-fontconfig = []
font-provider-directwrite = []
font-provider-android-ndk = []

# Sets some additional default features appropriate for the target platform.
# Note that these are set using a build script as they differ per-platform.
# Currently this just enables a reasonable default set of font providers.
platform-defaults = []

[dependencies]
thiserror = "1"
quick-xml = "0.36"

# TODO: Waiting for get_or_try_init to get stabilised.
once_cell = "1"

text-sys = { path = "./text-sys" }

icu_segmenter = "2"
unicode-bidi = "0.3"

util = { workspace = true }
rasterize = { workspace = true }
macros = { workspace = true }

[lints]
workspace = true

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.61", features = ["Win32_Graphics_DirectWrite"] }
windows-core = "0.61"

[target.'cfg(target_os = "android")'.dependencies]
ndk-sys = { version = "0.6" }

[profile.release]
panic = "abort"

[profile.profiling]
inherits = "release"
strip = false
debug = true

[workspace]
members = [
  "sbr-util",
  "sbr-rasterize",
  "sbr-overlay",
  "sbr-macros",
  "xtask"
]

[workspace.dependencies]
wgpu = { version = "26" }

util = { path = "sbr-util", package = "sbr-util" }
rasterize = { path = "sbr-rasterize", package = "sbr-rasterize" }
macros = { path = "sbr-macros", package = "sbr-macros" }

[workspace.lints.clippy]
too_many_arguments = "allow"
type_complexity = "allow"
missing_transmute_annotations = "allow"
# currently not too useful in the workspace setting
# once we have a Rust API consider warning on this
new_without_default = "allow"
